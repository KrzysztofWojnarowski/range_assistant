{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","inputMass","setInputMass","useState","convertedMass","setConvertedMass","unit","setUnit","revolverChargesUberti","chargeUberti","setChargeUberti","avereageLastSeries","setAverageLastSeries","deviationLastSeries","setDeviationLastSeries","seriesGroup","setSeriesGroup","currentSeries","setCurrentSeries","scores","seriesNo","serieNo","setSerieNo","scoreAdded","setScoreAdded","massChange","e","toGrainClick","toGramClick","addScore","i","cs","push","toString","getAverage","data","length","ret","forEach","element","scoreButtons","React","createElement","Button","type","size","onClick","createNewSeries","avg","Math","sqrt","reduce","p","pow","getDeviation","tabItems","key","label","children","Flex","gap","vertical","style","width","InputNumber","name","defaultValue","onChange","block","id","toFixed","ButtonGroup","join","wrap","showSeriesLog","chartData","Array","fill","serie","s","overallChartData","map","j","console","log","BarChart","xAxis","scaleType","series","height","chartsTab","className","padding","Tabs","defaultActiveKey","items","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.42ecac6b.chunk.js","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\n\nimport './App.css';\nimport { Flex, Button, Tabs, InputNumber } from 'antd';\nimport ButtonGroup from 'antd/es/button/button-group';\nimport { BarChart } from '@mui/x-charts/BarChart';\n\nfunction App() {\n  const [inputMass, setInputMass] = useState(0);\n  const [convertedMass, setConvertedMass] = useState(0);\n  const [unit, setUnit] = useState(\"N/A\");\n  const [revolverChargesUberti] = useState({\n    \".31\": \"9 - 15\",\n    \".36\": \"15 - 25\",\n    \".36c\": \"12 - 15\",\n    \".44\": \"22 - 30\",\n    \".44c\": \"19 - 25\"\n  });\n  const [chargeUberti, setChargeUberti] = useState(\"N/A\");\n  const [avereageLastSeries, setAverageLastSeries] = useState(0);\n  const [deviationLastSeries, setDeviationLastSeries] = useState(0);\n  const [seriesGroup, setSeriesGroup] = useState([]);\n  const [currentSeries, setCurrentSeries] = useState({ scores: [], seriesNo: 0 });\n  const [serieNo, setSerieNo] = useState(0);\n  const [scoreAdded,setScoreAdded] = useState(\"N/A\");\n\n\n  function unitConversion() {\n    return (\n      <section>\n        <h2>Unit conversion</h2>\n        <Flex gap=\"small\" vertical style={{ width: '100%' }}>\n          <InputNumber style={{ width: '100%' }} name=\"unitInput\" defaultValue={0} onChange={massChange} />\n\n          <Button block type=\"primary\" name=\"grainToGram\" onClick={toGramClick}>Grain to gram</Button>\n          <Button block type=\"primary\" name=\"gramToGrain\" onClick={toGrainClick}>Gram to grain</Button>\n\n        </Flex>\n        <p id=\"conversionResult\">{convertedMass.toFixed(2)} <span>{unit}</span></p>\n      </section>\n    );\n  }\n\n  function ubertiCharges() {\n    return (\n      <section>\n        <Flex vertical gap=\"small\" style={{ width: '100%' }}>\n          <h2>Black Powder Charges</h2>\n          <p>{chargeUberti} [Grain]</p>\n          <Button block type='default' onClick={() => setChargeUberti(revolverChargesUberti['.31'])}>.31 Revolver</Button>\n          <Button block type='default' onClick={() => setChargeUberti(revolverChargesUberti['.36'])}>.36 Revolver</Button>\n          <Button block type='default' onClick={() => setChargeUberti(revolverChargesUberti['.36c'])}>.36 Conical Revolver</Button>\n          <Button block type='default' onClick={() => setChargeUberti(revolverChargesUberti['.44'])}>.44 Revolver</Button>\n          <Button block type='default' onClick={() => setChargeUberti(revolverChargesUberti['.44c'])}>.44 Conical Revolver</Button>\n        </Flex>\n      </section>\n    )\n  }\n\n  function grainToGram(grains) {\n    return grains * 0.06479891;\n  }\n  function gramToGrain(grams) {\n    return grams / 0.06479891;\n  }\n\n  function massChange(e) {\n    setInputMass(e);\n  }\n\n  function toGrainClick() {\n    setConvertedMass(gramToGrain(inputMass));\n    setUnit(\"Grain\");\n  }\n  function toGramClick() {\n    setConvertedMass(grainToGram(inputMass));\n    setUnit(\"Gram\");\n  }\n\n  function addScore(i) {\n    let cs = currentSeries.scores;\n    cs.push(i);\n    setScoreAdded(i.toString());\n    setCurrentSeries({ scores: cs, seriesNo: serieNo });\n\n  }\n\n  function getAverage(data) {\n    if (data.length == 0) return 0;\n    let ret = 0;\n    data.forEach(element => {\n      ret += element;\n    });\n    return ret / data.length;\n  }\n\n  const scoreButtons = [];\n  for (let i = 0; i <= 10; i++) {\n    scoreButtons.push(<Button type='default' size=\"large\" onClick={() => addScore(i)}>{i}</Button>);\n  }\n\n  function getDeviation(data) {\n    const avg = getAverage(data);\n    return Math.sqrt(data.reduce((p, e) => p + Math.pow(e - avg, 2), 0) / data.length);\n  }\n\n  function createNewSeries() {\n    if (currentSeries.scores.length == 0) return;\n    setAverageLastSeries(getAverage(currentSeries.scores));\n    setDeviationLastSeries(getDeviation(currentSeries.scores));\n    seriesGroup.push(currentSeries);\n    setSerieNo(serieNo + 1);\n    setCurrentSeries({ scores: [], seriesNo: serieNo });\n\n  }\n\n  function showSeriesLog() {\n    let ret = [];\n    seriesGroup.forEach(i => {\n      ret.push(\n        <p>\n          <span>Series #{i.seriesNo}: </span>\n\n          {i.scores.join(\" | \")}\n          <span> Avg:{getAverage(i.scores).toFixed(2)}</span>\n        </p>\n      )\n    });\n    return (<div>\n      {ret}\n    </div>);\n  }\n\n  function series(){\n    return(<section>\n      <h2>Shooting log</h2>\n      <ButtonGroup>\n      <Button type='default' onClick={createNewSeries}>New series</Button>\n      <Button type='default' onClick={()=>setCurrentSeries({ scores: [], seriesNo: serieNo })}>Clear current </Button>\n      <Button type='default' onClick={()=>setSeriesGroup([])}>Clear All </Button>\n      </ButtonGroup>\n      <p>Series {serieNo}</p>\n      <h2>Score</h2>\n      <p>{currentSeries.scores.join(\" | \")||\"N/A\"}</p>\n      <Flex wrap=\"wrap\" gap=\"middle\">\n        {scoreButtons}\n      </Flex>\n      {showSeriesLog()}\n      \n    </section>);\n  }\n\n  \n    const tabItems = [\n      {\n        key: '1',\n        label: 'Units',\n        children: unitConversion(),\n      },\n      {\n        key: '2',\n        label: 'Charges',\n        children: ubertiCharges(),\n      },\n      {\n        key: '3',\n        label: 'Log',\n        children: series(),\n      },\n      {\n        key: '4',\n        label: 'Chart',\n        children: chartsTab(),\n      },\n      \n    ];\n  \n    function seriesToChartData(series){\n      let chartData =new Array(11).fill(0);\n      \n      series.scores.forEach(i=>{\n       chartData[i]++;\n      });\n      return chartData;\n\n    }\n    function overallChartData(){\n      let chartData =new Array(11).fill(0);\n      seriesGroup.forEach(serie=>{\n        serie.scores.forEach(s=>chartData[s]++);\n      });\n      return chartData;\n    }\n\n    function chartsTab(){\n   //   const data = seriesToChartData(currentSeries);\n      const data = overallChartData();\n      const s = new Array(11).fill(0).map((i,j)=>j);\n      console.log(data,s);\n      return(\n        <BarChart\n        xAxis={[{ scaleType: 'band', data: s }]}\n        series={[{ data:data }]}\n        width={300}\n        height={200}\n      />\n      )\n    }\n\n\n\n  return (\n    <div className=\"App\" style={{padding:\"5px\"}}>\n      <header>\n        <h1>Range assistant</h1>\n\n      </header>\n      <Tabs defaultActiveKey=\"1\" items={tabItems}>\n\n      </Tabs>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}